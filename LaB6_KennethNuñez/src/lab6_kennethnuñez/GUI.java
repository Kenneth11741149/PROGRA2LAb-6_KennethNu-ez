/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab6_kennethnuñez;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Burni
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        UsersLoader();
        MovieLoader();
        SeriesLoader();
        JOptionPane.showMessageDialog(this, "El programa tiene una Master Account:\n Username: Master   \n Password: Master");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textArea1 = new java.awt.TextArea();
        MainScreen = new javax.swing.JDialog();
        label2 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_pelis = new javax.swing.JTree();
        button2 = new java.awt.Button();
        button3 = new java.awt.Button();
        button14 = new java.awt.Button();
        Ag_Peliculas = new java.awt.Button();
        button16 = new java.awt.Button();
        label34 = new java.awt.Label();
        Ag_Series = new java.awt.Button();
        label35 = new java.awt.Label();
        Registry = new javax.swing.JDialog();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        Contraseña = new java.awt.Label();
        label7 = new java.awt.Label();
        label8 = new java.awt.Label();
        cb_Month = new javax.swing.JComboBox<>();
        Año = new java.awt.Label();
        REG_Email = new java.awt.TextField();
        REG_Password = new javax.swing.JPasswordField();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();
        label11 = new java.awt.Label();
        label12 = new java.awt.Label();
        label13 = new java.awt.Label();
        label14 = new java.awt.Label();
        REG_Card = new java.awt.TextField();
        label15 = new java.awt.Label();
        button5 = new java.awt.Button();
        sp_Year = new javax.swing.JSpinner();
        MasterAdmin = new javax.swing.JDialog();
        label16 = new java.awt.Label();
        jScrollPane2 = new javax.swing.JScrollPane();
        jl_MA1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        Jl_Ma2 = new javax.swing.JList<>();
        button6 = new java.awt.Button();
        button7 = new java.awt.Button();
        button8 = new java.awt.Button();
        button9 = new java.awt.Button();
        button10 = new java.awt.Button();
        button11 = new java.awt.Button();
        button12 = new java.awt.Button();
        button13 = new java.awt.Button();
        ShowMod = new javax.swing.JDialog();
        label17 = new java.awt.Label();
        MA_ID = new java.awt.TextField();
        label18 = new java.awt.Label();
        MA_Nombre = new java.awt.TextField();
        label19 = new java.awt.Label();
        MA_Categoria = new java.awt.TextField();
        label20 = new java.awt.Label();
        label21 = new java.awt.Label();
        MA_Idiomas = new java.awt.TextField();
        label22 = new java.awt.Label();
        MA_Subtitulos = new java.awt.TextField();
        label24 = new java.awt.Label();
        MA_Duracion = new java.awt.TextField();
        label25 = new java.awt.Label();
        label26 = new java.awt.Label();
        jSpinner1 = new javax.swing.JSpinner();
        label27 = new java.awt.Label();
        label23 = new java.awt.Label();
        label28 = new java.awt.Label();
        label29 = new java.awt.Label();
        MA_Productora = new java.awt.TextField();
        MA_Director = new java.awt.TextField();
        label30 = new java.awt.Label();
        label31 = new java.awt.Label();
        MA_Rating = new java.awt.Label();
        Push = new java.awt.Button();
        label32 = new java.awt.Label();
        MA_Actores = new java.awt.TextField();
        label33 = new java.awt.Label();
        textField1 = new java.awt.TextField();
        Modify = new java.awt.Button();
        Modifiable = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        TABLETISTI = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_guan = new javax.swing.JTree();
        label1 = new java.awt.Label();
        Login_Username = new java.awt.TextField();
        Login_Password = new javax.swing.JPasswordField();
        Correo = new java.awt.Label();
        label3 = new java.awt.Label();
        button1 = new java.awt.Button();
        label4 = new java.awt.Label();

        label2.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        label2.setText("Uniflix");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Uniflix");
        jt_pelis.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jt_pelis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_pelisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt_pelis);

        button2.setLabel("Add to Favorites");
        button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button2MouseClicked(evt);
            }
        });

        button3.setLabel("Show my Favorites");
        button3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button3MouseClicked(evt);
            }
        });

        button14.setLabel("Refresh Model");
        button14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button14MouseClicked(evt);
            }
        });

        Ag_Peliculas.setLabel("Agregar");
        Ag_Peliculas.setName(""); // NOI18N
        Ag_Peliculas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Ag_PeliculasMouseClicked(evt);
            }
        });

        button16.setLabel("extra options");
        button16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button16MouseClicked(evt);
            }
        });

        label34.setName(""); // NOI18N
        label34.setText("Peliculas");

        Ag_Series.setLabel("Agregar");

        label35.setText("Series");

        javax.swing.GroupLayout MainScreenLayout = new javax.swing.GroupLayout(MainScreen.getContentPane());
        MainScreen.getContentPane().setLayout(MainScreenLayout);
        MainScreenLayout.setHorizontalGroup(
            MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainScreenLayout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainScreenLayout.createSequentialGroup()
                        .addComponent(Ag_Peliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                        .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainScreenLayout.createSequentialGroup()
                        .addGroup(MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(MainScreenLayout.createSequentialGroup()
                                    .addGap(69, 69, 69)
                                    .addComponent(label34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Ag_Series, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(298, 298, 298))
        );
        MainScreenLayout.setVerticalGroup(
            MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainScreenLayout.createSequentialGroup()
                .addGroup(MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainScreenLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainScreenLayout.createSequentialGroup()
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(label34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addGroup(MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainScreenLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MainScreenLayout.createSequentialGroup()
                        .addGroup(MainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainScreenLayout.createSequentialGroup()
                                .addComponent(label35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainScreenLayout.createSequentialGroup()
                                .addComponent(Ag_Peliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(Ag_Series, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(244, Short.MAX_VALUE))
        );

        label5.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        label5.setText("Registro");

        label6.setText("Correo Electronico");

        Contraseña.setText("Contraseña");

        label7.setText("Fecha de Nacimiento");

        label8.setText("Mes");

        cb_Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        Año.setText("Año");

        label9.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label9.setText("Tarjeta de Debito/Credito");

        label10.setText("Visa Approved");

        label11.setText("MasterCard Approved");

        label12.setText("No se Aceptan American Express");

        label13.setText("Trimarchi Level Encryption");

        label15.setText("Exactamente 16 digitos");

        button5.setLabel("Attempt Register");
        button5.setName("Attempt Register"); // NOI18N
        button5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button5MouseClicked(evt);
            }
        });

        sp_Year.setModel(new javax.swing.SpinnerNumberModel(1999, 1930, 1999, 1));

        javax.swing.GroupLayout RegistryLayout = new javax.swing.GroupLayout(Registry.getContentPane());
        Registry.getContentPane().setLayout(RegistryLayout);
        RegistryLayout.setHorizontalGroup(
            RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistryLayout.createSequentialGroup()
                .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegistryLayout.createSequentialGroup()
                        .addGap(396, 396, 396)
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(RegistryLayout.createSequentialGroup()
                            .addGap(343, 343, 343)
                            .addComponent(REG_Card, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, RegistryLayout.createSequentialGroup()
                            .addGap(78, 78, 78)
                            .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(72, 72, 72)
                            .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(RegistryLayout.createSequentialGroup()
                                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(cb_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53)
                                        .addComponent(Año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(sp_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(REG_Email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(REG_Password))
                                .addGroup(RegistryLayout.createSequentialGroup()
                                    .addGap(149, 149, 149)
                                    .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(84, 84, 84)
                            .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(RegistryLayout.createSequentialGroup()
                                    .addComponent(label14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39)
                                    .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegistryLayout.createSequentialGroup()
                                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(11, 11, 11))))))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        RegistryLayout.setVerticalGroup(
            RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistryLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegistryLayout.createSequentialGroup()
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(REG_Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RegistryLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(RegistryLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(REG_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(sp_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(RegistryLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(cb_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(RegistryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(REG_Card, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        MasterAdmin.setName("Mas"); // NOI18N

        label16.setName("Master Administration"); // NOI18N
        label16.setText("Master Administration");

        jl_MA1.setBorder(new javax.swing.border.MatteBorder(null));
        jl_MA1.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(jl_MA1);

        Jl_Ma2.setBorder(new javax.swing.border.MatteBorder(null));
        Jl_Ma2.setModel(new DefaultListModel());
        jScrollPane3.setViewportView(Jl_Ma2);

        button6.setLabel("Agregar");
        button6.setName(""); // NOI18N
        button6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button6MouseClicked(evt);
            }
        });

        button7.setLabel("Modificar");
        button7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button7MouseEntered(evt);
            }
        });

        button8.setLabel("Eliminar");
        button8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button8MouseClicked(evt);
            }
        });

        button9.setLabel("Agregar");

        button10.setLabel("Modificar");

        button11.setLabel("Eliminar");

        button12.setLabel("Provide Series Information");

        button13.setLabel("Provide Movie Information");

        javax.swing.GroupLayout MasterAdminLayout = new javax.swing.GroupLayout(MasterAdmin.getContentPane());
        MasterAdmin.getContentPane().setLayout(MasterAdminLayout);
        MasterAdminLayout.setHorizontalGroup(
            MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MasterAdminLayout.createSequentialGroup()
                .addGap(520, 520, 520)
                .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MasterAdminLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MasterAdminLayout.createSequentialGroup()
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(button13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 291, Short.MAX_VALUE)
                .addGroup(MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MasterAdminLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(MasterAdminLayout.createSequentialGroup()
                        .addGroup(MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MasterAdminLayout.createSequentialGroup()
                        .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))))
        );
        MasterAdminLayout.setVerticalGroup(
            MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MasterAdminLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(MasterAdminLayout.createSequentialGroup()
                        .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(30, 30, 30)
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(button13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MasterAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(256, Short.MAX_VALUE))
        );

        label17.setText("ID Code");

        label18.setText("Nombre");

        label19.setText("Categoria");

        label20.setText("Pegados, separados por coma, sin espacios");

        label21.setText("Idiomas");

        label22.setText("Subtitulos");

        label24.setText("Duracion");

        label25.setText("Escrito como String en Horas y Minutos");

        label26.setText("Rating");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        label27.setText("Pegados, separados por coma, sin espacios");

        label23.setText("Comentarios");

        label28.setText("Productora");

        label29.setText("Director");

        label30.setText("Master Admin System");

        label31.setName(""); // NOI18N
        label31.setText("Comments no disponible aun.");

        Push.setActionCommand("Accept");
        Push.setLabel("Agregar");
        Push.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PushMouseClicked(evt);
            }
        });

        label32.setText("Actores");

        MA_Actores.setEditable(false);

        label33.setText("Peliculas");

        textField1.setText("Si utilizas el ; el programa crasheara");

        Modify.setLabel("Modify");
        Modify.setVisible(false);

        javax.swing.GroupLayout ShowModLayout = new javax.swing.GroupLayout(ShowMod.getContentPane());
        ShowMod.getContentPane().setLayout(ShowModLayout);
        ShowModLayout.setHorizontalGroup(
            ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowModLayout.createSequentialGroup()
                .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowModLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(label32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52)
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(ShowModLayout.createSequentialGroup()
                                    .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(MA_ID, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                                        .addComponent(MA_Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(MA_Categoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(MA_Idiomas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(MA_Subtitulos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(MA_Duracion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(100, 100, 100)
                                    .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(label20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(ShowModLayout.createSequentialGroup()
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(MA_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(label31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ShowModLayout.createSequentialGroup()
                                .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(MA_Director, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MA_Productora, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Push, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(235, 235, 235)
                                .addComponent(Modify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53))
                            .addComponent(MA_Actores, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ShowModLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(label30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(label33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        ShowModLayout.setVerticalGroup(
            ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowModLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ShowModLayout.createSequentialGroup()
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MA_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MA_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MA_Categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MA_Idiomas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MA_Subtitulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MA_Duracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowModLayout.createSequentialGroup()
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ShowModLayout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(label26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(label23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ShowModLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MA_Rating, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(label31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MA_Productora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MA_Director, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(ShowModLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MA_Actores, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addComponent(Push, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ShowModLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Modify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(130, 130, 130))
        );

        jMenuItem1.setText("Modificar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        Modifiable.add(jMenuItem1);

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Favorites");
        jt_guan.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane4.setViewportView(jt_guan);

        javax.swing.GroupLayout TABLETISTILayout = new javax.swing.GroupLayout(TABLETISTI.getContentPane());
        TABLETISTI.getContentPane().setLayout(TABLETISTILayout);
        TABLETISTILayout.setHorizontalGroup(
            TABLETISTILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TABLETISTILayout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(348, Short.MAX_VALUE))
        );
        TABLETISTILayout.setVerticalGroup(
            TABLETISTILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TABLETISTILayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 51));
        setResizable(false);

        label1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 0, 51));
        label1.setText("Uniflix");

        Login_Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Login_PasswordActionPerformed(evt);
            }
        });

        Correo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Correo.setText("Email");

        label3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label3.setText("Password");

        button1.setLabel("Attempt Login");
        button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button1MouseClicked(evt);
            }
        });
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        label4.setForeground(new java.awt.Color(51, 51, 255));
        label4.setName("No tienes cuenta? Registrate Aqui"); // NOI18N
        label4.setText("No tienes cuenta? Registrate Aqui");
        label4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(113, 113, 113)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Login_Password)
                            .addComponent(Login_Username, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(235, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Correo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Login_Username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Login_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button1ActionPerformed

    private void button1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button1MouseClicked
        // TODO add your handling code here:
        //UsersLoader();
        if (VerifyLogin(Login_Username.getText(), Login_Password.getText())) {
            Login_Password.setText("");
            Login_Username.setText("");
            for (int i = 0; i < Users.size(); i++) {
                if(Users.get(i).getEmail().equals(Login_Username.getText()) && Users.get(i).getContraseña().equals(Login_Password.getText())){
                    actual = Users.get(i);
                }
            }
            JOptionPane.showMessageDialog(this, "Successfull Login.");
            DefaultTreeModel m = (DefaultTreeModel) jt_pelis.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
            //Extraigo la raiz, le limpio lo que tiene
            raiz.removeAllChildren();
            DefaultMutableTreeNode Peliculas = new DefaultMutableTreeNode("Peliculas");
            DefaultMutableTreeNode Series = new DefaultMutableTreeNode("Series");
            //Creo mis 2 Nodos de peliculas y usuarios
            for (int i = 0; i < MovieCat.size(); i++) {
                //Recorrere las categorias disponibles
                DefaultMutableTreeNode N = new DefaultMutableTreeNode(MovieCat.get(i));
                //Creo el nodo de esa categoria
                for (int j = 0; j < Movies.size(); j++) {
                    //recorro mis peliculas disponibles
                    if (Movies.get(j).getCategoria().equals(MovieCat.get(i))) {
                        //Si la pelicula es de esa categoria, creo un nodo y se lo agrego. 
                        N.add(new DefaultMutableTreeNode(Movies.get(j)));
                    }
                }
                Peliculas.add(N);
                //Se lo agrego al nodo de peliculas
            }

            //repito para series.
            for (int i = 0; i < SeriesCat.size(); i++) {
                DefaultMutableTreeNode M = new DefaultMutableTreeNode(SeriesCat.get(i));
                for (int j = 0; j < SeriesA.size(); j++) {
                    if (SeriesA.get(j).getCategoria().equals(SeriesCat.get(i))) {
                        M.add(new DefaultMutableTreeNode(SeriesA.get(j)));
                    }
                }
                Series.add(M);
            }
            raiz.add(Peliculas);
            raiz.add(Series);
            m.reload();
            MainScreen.pack();
            MainScreen.setModal(true);
            MainScreen.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "Unsuccessfull Login.");
            Login_Password.setText("");
            Login_Username.setText("");
        }
    }//GEN-LAST:event_button1MouseClicked

    private void label4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label4MouseClicked
        // TODO add your handling code here:
        ////////////////////////
        Login_Password.setText("");
        Login_Username.setText("");
        Registry.pack();
        Registry.setModal(true);
        Registry.setVisible(true);


    }//GEN-LAST:event_label4MouseClicked

    private void button5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button5MouseClicked
        // TODO add your handling code here:
        String Email = REG_Email.getText();
        String Password = REG_Password.getText();
        String CardNumber = REG_Card.getText();
        if (Email.contains("@") && (Email.contains(".com") || Email.contains(".edu"))) {
            if (UserExists(Email)) {
                JOptionPane.showMessageDialog(Registry, "Ya hay una instancia de: " + Email + " En Uniflix.");
                REG_Email.setText("");
                REG_Password.setText("");
                REG_Card.setText("");
            } else {
                if (REG_Card.getText().length() == 16) {
                    String cumple = (cb_Month.getSelectedItem().toString() + "/" + sp_Year.getValue().toString());
                    Usuario Registrado = new Usuario(Email, Password, cumple, CardNumber);
                    Users.add(Registrado);
                    UsersUpdater();
                    UsersLoader();
                    JOptionPane.showMessageDialog(Registry, "Successfull User Creation  \n Correo:" + Email + "\n Contraseña: " + Password);
                    REG_Email.setText("");
                    REG_Password.setText("");
                    REG_Card.setText("");
                    Registry.setModal(false);
                    Registry.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(Registry, "Se ha Ingresado una MasterCard, Favor Ingrese de las Visas de 16 caracteres.");
                }

            }
        } else {
            JOptionPane.showMessageDialog(Registry, "No se Ingreso un correo Electronico. ");
            REG_Email.setText("");
            REG_Password.setText("");
            REG_Card.setText("");
        }


    }//GEN-LAST:event_button5MouseClicked

    private void Login_PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Login_PasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Login_PasswordActionPerformed

    private void button6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button6MouseClicked
        // TODO add your handling code here:
        Modify.setVisible(false);
        ShowMod.pack();
        ShowMod.setVisible(true);
        MA_ID.setText("");
        MA_Nombre.setText("");
        MA_Categoria.setText("");
        MA_Idiomas.setText("");
        MA_Subtitulos.setText("");
        MA_Duracion.setText("");
        MA_Rating.setText("");
        MA_Productora.setText("");
        MA_Director.setText("");
        MA_Actores.setText("");
        Push.setVisible(true);

    }//GEN-LAST:event_button6MouseClicked

    private void button7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button7MouseClicked
        // TODO add your handling code here:
        if (jl_MA1.getSelectedIndex() >= 0) {
            Modify.setVisible(true);
            Push.setVisible(false);
            ShowMod.pack();
            ShowMod.setVisible(true);
            int xer = jl_MA1.getSelectedIndex();
            MA_ID.setText(Movies.get(xer).getId());
            MA_Nombre.setText(Movies.get(xer).getNombre());
            MA_Categoria.setText(Movies.get(xer).getCategoria());
            MA_Idiomas.setText(Movies.get(xer).getIdiomas().toString());
            MA_Subtitulos.setText(Movies.get(xer).getSubtitulos().toString());
            MA_Duracion.setText(Movies.get(xer).getDuracion());
            MA_Rating.setText(Movies.get(xer).getRating());
            MA_Productora.setText(Movies.get(xer).getProductora());
            MA_Director.setText(Movies.get(xer).getDirector());
            MA_Actores.setText(Movies.get(xer).getActores().toString());
        } else {
            JOptionPane.showMessageDialog(MasterAdmin, "No selected Index Error");
        }
    }//GEN-LAST:event_button7MouseClicked

    private void PushMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PushMouseClicked
        // TODO add your handling code here:
        if (Codes.contains(MA_ID.getText()) || Movies.contains(MA_Nombre.getText())) {
            JOptionPane.showMessageDialog(this, "Pelicula o Codigo ya existente.");
        } else {
            Peliculas Nueva = new Peliculas(MA_ID.getText(), MA_Nombre.getText(), MA_Categoria.getText(), MA_Duracion.getText(), MA_Rating.getText(), MA_Productora.getText(), MA_Director.getText());
            Movies.add(Nueva);
            if (MovieCat.contains(MA_Categoria.getText())) {

            } else {
                MovieCat.add(MA_Categoria.getText());
            }
            System.out.println(Movies.toString());
            Codes.add(MA_ID.getText());
            JOptionPane.showMessageDialog(this, "Successfull Creation of movie.");
            ShowMod.setVisible(false);
        }


    }//GEN-LAST:event_PushMouseClicked

    private void button14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button14MouseClicked
        // TODO add your handling code here:
        DefaultTreeModel m = (DefaultTreeModel) jt_pelis.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
        //Extraigo la raiz, le limpio lo que tiene
        raiz.removeAllChildren();
        DefaultMutableTreeNode Peliculas = new DefaultMutableTreeNode("Peliculas");
        DefaultMutableTreeNode Series = new DefaultMutableTreeNode("Series");
        //Creo mis 2 Nodos de peliculas y usuarios
        for (int i = 0; i < MovieCat.size(); i++) {
            //Recorrere las categorias disponibles
            DefaultMutableTreeNode N = new DefaultMutableTreeNode(MovieCat.get(i));
            //Creo el nodo de esa categoria
            for (int j = 0; j < Movies.size(); j++) {
                //recorro mis peliculas disponibles
                if (Movies.get(j).getCategoria().equals(MovieCat.get(i))) {
                    //Si la pelicula es de esa categoria, creo un nodo y se lo agrego. 
                    N.add(new DefaultMutableTreeNode(Movies.get(j)));
                }
            }
            Peliculas.add(N);
            //Se lo agrego al nodo de peliculas
        }

        //repito para series.
        for (int i = 0; i < SeriesCat.size(); i++) {
            DefaultMutableTreeNode M = new DefaultMutableTreeNode(SeriesCat.get(i));
            for (int j = 0; j < SeriesA.size(); j++) {
                if (SeriesA.get(j).getCategoria().equals(SeriesCat.get(i))) {
                    M.add(new DefaultMutableTreeNode(SeriesA.get(j)));
                }
            }
            Series.add(M);
        }
        raiz.add(Peliculas);
        raiz.add(Series);
        m.reload();
    }//GEN-LAST:event_button14MouseClicked

    private void button8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button8MouseClicked
        // TODO add your handling code here:
        if (jl_MA1.getSelectedIndex() >= 0) {
            int xxer = jl_MA1.getSelectedIndex();
            Movies.remove(xxer);
            DefaultListModel modelo = (DefaultListModel) jl_MA1.getModel();
            modelo.remove(xxer);
            jl_MA1.setModel(modelo);

        } else {
            JOptionPane.showMessageDialog(this, "Select an element.");
        }


    }//GEN-LAST:event_button8MouseClicked

    private void button7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button7MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_button7MouseEntered

    private void Ag_PeliculasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Ag_PeliculasMouseClicked
        // TODO add your handling code here:
        MainScreen.setModal(false);
        MainScreen.setVisible(false);
        Modify.setVisible(false);
        ShowMod.pack();
        ShowMod.setVisible(true);
        MA_ID.setText("");
        MA_Nombre.setText("");
        MA_Categoria.setText("");
        MA_Idiomas.setText("");
        MA_Subtitulos.setText("");
        MA_Duracion.setText("");
        MA_Rating.setText("");
        MA_Productora.setText("");
        MA_Director.setText("");
        MA_Actores.setText("");
        Push.setVisible(true);
    }//GEN-LAST:event_Ag_PeliculasMouseClicked

    private void button16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button16MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(MainScreen, "Click derecho en una serie o pelicula.");
    }//GEN-LAST:event_button16MouseClicked

    private void jt_pelisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_pelisMouseClicked
        // TODO add your handling code here:
        if (evt.isMetaDown()) {
            //Seleccionar un nodo con click derecho
            int row = jt_pelis.getClosestRowForLocation(evt.getX(), evt.getY());
            jt_pelis.setSelectionRow(row); //Lo hago seleccionado
            Object v1 = jt_pelis.getSelectionPath().getLastPathComponent(); //Le pregunto cual es el seleccionado y lo extraigo.
            nodo_seleccionado = (DefaultMutableTreeNode) v1;
            
                if (nodo_seleccionado.getUserObject() instanceof Peliculas || nodo_seleccionado.getUserObject() instanceof Series) {
                String xert = JOptionPane.showInputDialog(this, "1 para Modificar o 2 para eliminar");
                if (xert.equals("1")) {
                    if (nodo_seleccionado.getUserObject() instanceof Peliculas) {
                        Peliculas x = (Peliculas) nodo_seleccionado.getUserObject();
                        for (int i = 0; i < Movies.size(); i++) {
                            if (Movies.get(i).getId().equals(x.getId())) {
                                String xerty = JOptionPane.showInputDialog("Ingrese el nombre de la pelicula ahora:");
                                if (checker(xerty)) {
                                    JOptionPane.showMessageDialog(this, "Pelicula ya existe.");
                                } else {
                                    Movies.get(i).setNombre(xerty);
                                }
                            }
                        }
                    } else if (nodo_seleccionado.getUserObject() instanceof Series) {
                        Series x = (Series) nodo_seleccionado.getUserObject();
                        for (int i = 0; i < SeriesA.size(); i++) {
                            if (SeriesA.get(i).getId().equals(x.getId())) {
                                String xerty = JOptionPane.showInputDialog("Ingrese el nombre de la pelicula ahora:");
                                if (checker(xerty)) {
                                    JOptionPane.showMessageDialog(this, "Serie ya existe.");
                                } else {
                                    SeriesA.get(i).setNombre(xerty);
                                }

                            }
                        }
                    }
                } else {
                    if(nodo_seleccionado.getUserObject() instanceof Peliculas){
                        Peliculas x = (Peliculas) nodo_seleccionado.getUserObject();
                        for (int i = 0; i < Movies.size(); i++) {
                            if(Movies.get(i).getId().equals(x.getId())){
                                Movies.remove(i);
                                Reloader();
                            }
                        }
                    } else if(nodo_seleccionado.getUserObject() instanceof Series){
                        Series y = (Series) nodo_seleccionado.getUserObject();
                        for (int i = 0; i < SeriesA.size(); i++) {
                            if(SeriesA.get(i).getId().equals(y.getId())){
                                SeriesA.remove(i);
                                Reloader();
                            }
                        }
                    }
                }
            } 
            
            
        } //Fin if
    }//GEN-LAST:event_jt_pelisMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void button2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button2MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Click derecho en serie o pelicula. ");
    }//GEN-LAST:event_button2MouseClicked

    private void button3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button3MouseClicked
        // TODO add your handling code here:
        if(actual.getEmail().equals("Master") != true){
            TABLETISTI.pack();
            TABLETISTI.setVisible(true);
            DefaultTreeModel model = (DefaultTreeModel) jt_guan.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) model.getRoot();
            raiz.removeAllChildren();
            DefaultMutableTreeNode Peliculas = new DefaultMutableTreeNode();
            DefaultMutableTreeNode Series = new DefaultMutableTreeNode();
            
            for (int i = 0; i < actual.getPeliculas().size(); i++) {
                for (int j = 0; j < MovieCat.size(); j++) {
                    DefaultMutableTreeNode m = new DefaultMutableTreeNode(MovieCat.get(i));
                    if(((Peliculas)actual.getPeliculas().get(i)).getCategoria().equals(MovieCat.get(i).toString())){
                        m.add(new DefaultMutableTreeNode(actual.getPeliculas().get(i).toString()  )     );
                    }
                    Peliculas.add(m);
                }
            }
        }
    }//GEN-LAST:event_button3MouseClicked
/////////////////////////////////////////////////////////
    public void Reloader(){
        DefaultTreeModel m = (DefaultTreeModel) jt_pelis.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) m.getRoot();
        //Extraigo la raiz, le limpio lo que tiene
        raiz.removeAllChildren();
        DefaultMutableTreeNode Peliculas = new DefaultMutableTreeNode("Peliculas");
        DefaultMutableTreeNode Series = new DefaultMutableTreeNode("Series");
        //Creo mis 2 Nodos de peliculas y usuarios
        for (int i = 0; i < MovieCat.size(); i++) {
            //Recorrere las categorias disponibles
            DefaultMutableTreeNode N = new DefaultMutableTreeNode(MovieCat.get(i));
            //Creo el nodo de esa categoria
            for (int j = 0; j < Movies.size(); j++) {
                //recorro mis peliculas disponibles
                if (Movies.get(j).getCategoria().equals(MovieCat.get(i))) {
                    //Si la pelicula es de esa categoria, creo un nodo y se lo agrego. 
                    N.add(new DefaultMutableTreeNode(Movies.get(j)));
                }
            }
            Peliculas.add(N);
            //Se lo agrego al nodo de peliculas
        }

        //repito para series.
        for (int i = 0; i < SeriesCat.size(); i++) {
            DefaultMutableTreeNode M = new DefaultMutableTreeNode(SeriesCat.get(i));
            for (int j = 0; j < SeriesA.size(); j++) {
                if (SeriesA.get(j).getCategoria().equals(SeriesCat.get(i))) {
                    M.add(new DefaultMutableTreeNode(SeriesA.get(j)));
                }
            }
            Series.add(M);
        }
        raiz.add(Peliculas);
        raiz.add(Series);
        m.reload();
    }
    
    
    
    public boolean checker(String x){
        boolean check = false;
        for (int i = 0; i < Movies.size(); i++) {
            if(Movies.get(i).getNombre().equals(x)){
                check = true;
            }
        }
        for (int i = 0; i < SeriesA.size(); i++) {
            if(Movies.get(i).getNombre().equals(x)){
                check = true;
            }
        }
        return check;
    }
    
    
    
    
    public void MovieUpdater() {
        File archivo;
        FileWriter fw = null;
        BufferedWriter bw = null;
        try {
            archivo = new File("./Program Files/Peliculas.txt");
            fw = new FileWriter(archivo, false);
            bw = new BufferedWriter(fw);
            for (int i = 0; i < Movies.size(); i++) {
                bw.write(Movies.get(i).getId() + ";");
                bw.write(Movies.get(i).getNombre() + ";");
                bw.write(Movies.get(i).getCategoria() + ";");

                if (Movies.get(i).getIdiomas().size() == 1) {
                    bw.write(Movies.get(i).getIdiomas().get(0).toString() + ";");
                } else if (Movies.get(i).getIdiomas().size() == 2) {
                    bw.write(Movies.get(i).getIdiomas().get(0).toString() + "," + Movies.get(i).getIdiomas().get(1).toString());
                } else if (Movies.get(i).getIdiomas().size() > 2) {
                    int ext = Movies.get(i).getIdiomas().size() - 1;
                    for (int j = 0; j < Movies.get(i).getIdiomas().size() - 1; j++) {
                        bw.write(Movies.get(i).getIdiomas().get(j) + ",");
                    }
                    bw.write(Movies.get(i).getIdiomas().get(ext) + ";");
                } else if (Movies.get(i).getIdiomas().size() == 0) {
                    bw.write(";");
                }

                if (Movies.get(i).getSubtitulos().size() == 1) {
                    bw.write(Movies.get(i).getSubtitulos().get(0).toString() + ";");
                } else if (Movies.get(i).getSubtitulos().size() == 2) {
                    bw.write(Movies.get(i).getSubtitulos().get(0).toString() + "," + Movies.get(i).getSubtitulos().get(1).toString());
                } else if (Movies.get(i).getSubtitulos().size() > 2) {
                    int ext = Movies.get(i).getSubtitulos().size() - 1;
                    for (int j = 0; j < Movies.get(i).getSubtitulos().size() - 1; j++) {
                        bw.write(Movies.get(i).getSubtitulos().get(j) + ",");
                    }
                    bw.write(Movies.get(i).getSubtitulos().get(ext) + ";");
                } else if (Movies.get(i).getSubtitulos().size() == 0) {
                    bw.write(";");
                }

                bw.write(Movies.get(i).getDuracion() + ";");
                bw.write(Movies.get(i).getRating() + ";");

                if (Movies.get(i).getComentarios().size() == 1) {
                    bw.write(Movies.get(i).getComentarios().get(0).toString() + ";");
                } else if (Movies.get(i).getComentarios().size() == 2) {
                    bw.write(Movies.get(i).getComentarios().get(0).toString() + "," + Movies.get(i).getComentarios().get(1).toString());
                } else if (Movies.get(i).getComentarios().size() > 2) {
                    int ext = Movies.get(i).getComentarios().size() - 1;
                    for (int j = 0; j < Movies.get(i).getComentarios().size() - 1; j++) {
                        bw.write(Movies.get(i).getComentarios().get(j) + ",");
                    }
                    bw.write(Movies.get(i).getComentarios().get(ext) + ";");
                } else if (Movies.get(i).getComentarios().size() == 0) {
                    bw.write(";");
                }
                bw.write(Movies.get(i).getProductora() + ";");
                bw.write(Movies.get(i).getDirector() + ";");

                if (Movies.get(i).getActores().size() == 1) {
                    bw.write(Movies.get(i).getActores().get(0).toString() + ";");
                } else if (Movies.get(i).getActores().size() == 2) {
                    bw.write(Movies.get(i).getActores().get(0).toString() + "," + Movies.get(i).getActores().get(1).toString());
                } else if (Movies.get(i).getActores().size() > 2) {
                    int ext = Movies.get(i).getActores().size() - 1;
                    for (int j = 0; j < Movies.get(i).getActores().size() - 1; j++) {
                        bw.write(Movies.get(i).getActores().get(j) + ",");
                    }
                    bw.write(Movies.get(i).getActores().get(ext) + ";");
                } else if (Movies.get(i).getActores().size() == 0) {
                    bw.write(";");
                }
                bw.newLine();

            }
            bw.flush();
        } catch (Exception e) {
            System.out.println("MovieUpdaterError");
        }
        try {
            bw.close();
            fw.close();
        } catch (Exception ex) {
            System.out.println("MovieUpdaterClose Error");
        }
    }

    public void MovieLoader() {
        File archivo;
        FileReader fr = null;
        BufferedReader br = null;
        try {
            archivo = new File("./Program Files/Peliculas.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            String linea = "";
            while ((linea = br.readLine()) != null) {
                Scanner sc = new Scanner(linea);
                sc.useDelimiter(";");
                String id = sc.next();
                String nombre = sc.next();
                String categoria = sc.next();

                ArrayList<String> idiomas = new ArrayList();
                String languages = sc.next();
                String[] adder = languages.split(",");
                for (int i = 0; i < adder.length; i++) {
                    idiomas.add(adder[i]);
                }

                ArrayList<String> subtitulos = new ArrayList();
                String subtitles = sc.next();
                String[] adder2 = subtitles.split(",");
                for (int i = 0; i < adder2.length; i++) {
                    subtitulos.add(adder2[i]);
                }

                String duracion = sc.next();
                String rating = sc.next();

                ArrayList<String> comentarios = new ArrayList();
                String comentary = sc.next();
                String[] adder3 = comentary.split(",");
                for (int i = 0; i < adder3.length; i++) {
                    comentarios.add(adder3[i]);
                }

                String productora = sc.next();
                String director = sc.next();

                ArrayList<String> actores = new ArrayList();
                String actors = sc.next();
                String[] adder4 = actors.split(",");
                for (int i = 0; i < adder4.length; i++) {
                    actores.add(adder4[i]);
                }

                Peliculas One = new Peliculas(id, nombre, categoria, duracion, rating, productora, director);
                One.setIdiomas(idiomas);
                One.setSubtitulos(subtitulos);
                One.setComentarios(comentarios);
                One.setActores(actores);
                Movies.add(One);
                if (MovieCat.contains(categoria)) {

                } else {
                    MovieCat.add(categoria);
                }
                Codes.add(id);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Loading MovieLoader Failure.");
        }
        try {
            br.close();
            fr.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Closing MovieLoader Failure.");
        }
    }

    public void SeriesLoader() {
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        try {
            archivo = new File("./Program Files/Series.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            String linea = "";
            while ((linea = br.readLine()) != null) {
                Scanner sc = new Scanner(linea);
                sc.useDelimiter(";");
                String id = sc.next();
                String nombre = sc.next();
                int numtemporadas = sc.nextInt();

                String categoria = sc.next();
                ArrayList<String> idiomas = new ArrayList();
                String lenguage = sc.next();
                String[] adder = lenguage.split(",");
                for (int i = 0; i < adder.length; i++) {
                    idiomas.add(adder[i]);
                }
                ArrayList<String> subtitulos = new ArrayList();
                String subtitles = sc.next();
                String[] adder2 = subtitles.split(",");
                for (int i = 0; i < adder2.length; i++) {
                    subtitulos.add(adder2[i]);
                }
                String duracion = sc.next();
                int rating = sc.nextInt();

                ArrayList<String> comentarios = new ArrayList();
                String comments = sc.next();
                String[] adder3 = comments.split(",");
                for (int i = 0; i < adder3.length; i++) {
                    comentarios.add(adder3[i]);
                }
                String productora = sc.next();
                String director = sc.next();
                ArrayList<String> actores = new ArrayList();
                String actors = sc.next();
                String[] adder4 = actors.split(",");
                for (int i = 0; i < adder4.length; i++) {
                    actores.add(adder4[i]);
                }
                Series Two = new Series(id, nombre, numtemporadas, categoria, duracion, rating, productora, director);
                Two.setActores(actores);
                Two.setIdiomas(idiomas);
                Two.setSubtitulos(subtitulos);
                Two.setComentarios(comentarios);
                Codes.add(id);
                SeriesA.add(Two);
                if (SeriesCat.contains(categoria)) {

                } else {
                    SeriesCat.add(categoria);
                }

            }

        } catch (Exception e) {

        }

        try {
            br.close();
            fr.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Close Operation SeriesLoader Failure.");
        }

    }

    /////////////////////////////////////////////////////
    public void UsersUpdater() {
        File archivo;
        FileWriter fw = null;
        BufferedWriter bw = null;
        try {
            archivo = new File("./Program Files/Usuarios.txt");
            fw = new FileWriter(archivo, false);
            bw = new BufferedWriter(fw);
            for (int i = 0; i < Users.size(); i++) {
                bw.write(Users.get(i).getEmail() + ";");
                bw.write(Users.get(i).getContraseña() + ";");
                bw.write(Users.get(i).getBirthday() + ";");
                if (Users.get(i).getPeliculas().size() == 1) {
                    bw.write(Users.get(i).getPeliculas().get(0).toString() + ";");
                } else if (Users.get(i).getPeliculas().size() == 2) {
                    bw.write(Users.get(i).getPeliculas().get(0).toString() + "," + Users.get(i).getPeliculas().get(1).toString());
                } else if (Users.get(i).getPeliculas().size() > 2) {
                    int ext = Users.get(i).getPeliculas().size() - 1;
                    for (int j = 0; j < Users.get(i).getPeliculas().size() - 1; j++) {
                        bw.write(Users.get(i).getPeliculas().get(j) + ",");
                    }
                    bw.write(Users.get(i).getPeliculas().get(ext) + ";");
                } else if (Users.get(i).getPeliculas().size() == 0) {
                    bw.write(";");
                }

                if (Users.get(i).getSeries().size() == 1) {
                    bw.write(Users.get(i).getSeries().get(0).toString() + ";");
                } else if (Users.get(i).getSeries().size() == 2) {
                    bw.write(Users.get(i).getSeries().get(0).toString() + "," + Users.get(i).getSeries().get(1).toString());
                } else if (Users.get(i).getSeries().size() > 2) {
                    int ext = Users.get(i).getSeries().size() - 1;
                    for (int j = 0; j < Users.get(i).getSeries().size() - 1; j++) {
                        bw.write(Users.get(i).getSeries().get(j) + ",");
                    }
                    bw.write(Users.get(i).getSeries().get(ext) + ";");
                } else if (Users.get(i).getSeries().size() == 0) {
                    bw.write(";");
                }

                bw.write(Users.get(i).getDebitCreditCard() + ";");
                bw.newLine();
            }
            bw.flush();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Failed to Update Users. USERSUPDATER FAILURE");
        }
        try {
            bw.close();
            fw.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "UserUpdater Closing Failure.");
        }

    }

    public boolean UserExists(String Username) {
        boolean Exists = false;
        for (int i = 0; i < Users.size(); i++) {
            if (Users.get(i).getEmail().equals(Username)) {
                Exists = true;
            }
        }
        return Exists;
    }

    public boolean VerifyLogin(String x, String y) {
        boolean verified = false;
        for (int i = 0; i < Users.size(); i++) {
            //System.out.println(Users.get(i).getEmail());
            //System.out.println(Users.get(i).getContraseña());
            if (Users.get(i).getEmail().equals(x) && Users.get(i).getContraseña().equals(y)) {
                verified = true;
            }
        }
        return verified;
    }

    public void UsersLoader() {
        Users.clear();
        File archivo;
        FileReader fr = null;
        BufferedReader br = null;
        try {
            archivo = new File("./Program Files/Usuarios.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            String linea = "";
            while ((linea = br.readLine()) != null) {
                Scanner sc = new Scanner(linea);
                sc.useDelimiter(";");
                String Email = sc.next();
                String Password = sc.next();
                //String Birthday = sc.next();
                ArrayList<Peliculas> te = new ArrayList();
                ArrayList<Series> ta = new ArrayList();
                Usuario Nuevo = new Usuario(Email, Password, "hi", "123456789");
                Users.add(Nuevo);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Unexpected Closure. First TC.");
        }
        try {
            br.close();
            fr.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unexpected Closure. Second TC.");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    static Usuario actual;
    static ArrayList<Usuario> Users = new ArrayList();
    static ArrayList<Peliculas> Movies = new ArrayList();
    static ArrayList<Series> SeriesA = new ArrayList();
    static ArrayList<String> Codes = new ArrayList();
    static ArrayList<String> MovieCat = new ArrayList();
    static ArrayList<String> SeriesCat = new ArrayList();
    DefaultMutableTreeNode nodo_seleccionado;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button Ag_Peliculas;
    private java.awt.Button Ag_Series;
    private java.awt.Label Año;
    private java.awt.Label Contraseña;
    private java.awt.Label Correo;
    private javax.swing.JList<String> Jl_Ma2;
    private javax.swing.JPasswordField Login_Password;
    private java.awt.TextField Login_Username;
    private java.awt.TextField MA_Actores;
    private java.awt.TextField MA_Categoria;
    private java.awt.TextField MA_Director;
    private java.awt.TextField MA_Duracion;
    private java.awt.TextField MA_ID;
    private java.awt.TextField MA_Idiomas;
    private java.awt.TextField MA_Nombre;
    private java.awt.TextField MA_Productora;
    private java.awt.Label MA_Rating;
    private java.awt.TextField MA_Subtitulos;
    private javax.swing.JDialog MainScreen;
    private javax.swing.JDialog MasterAdmin;
    private javax.swing.JPopupMenu Modifiable;
    private java.awt.Button Modify;
    private java.awt.Button Push;
    private java.awt.TextField REG_Card;
    private java.awt.TextField REG_Email;
    private javax.swing.JPasswordField REG_Password;
    private javax.swing.JDialog Registry;
    private javax.swing.JDialog ShowMod;
    private javax.swing.JDialog TABLETISTI;
    private java.awt.Button button1;
    private java.awt.Button button10;
    private java.awt.Button button11;
    private java.awt.Button button12;
    private java.awt.Button button13;
    private java.awt.Button button14;
    private java.awt.Button button16;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private java.awt.Button button5;
    private java.awt.Button button6;
    private java.awt.Button button7;
    private java.awt.Button button8;
    private java.awt.Button button9;
    private javax.swing.JComboBox<String> cb_Month;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JList<String> jl_MA1;
    private javax.swing.JTree jt_guan;
    private javax.swing.JTree jt_pelis;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label14;
    private java.awt.Label label15;
    private java.awt.Label label16;
    private java.awt.Label label17;
    private java.awt.Label label18;
    private java.awt.Label label19;
    private java.awt.Label label2;
    private java.awt.Label label20;
    private java.awt.Label label21;
    private java.awt.Label label22;
    private java.awt.Label label23;
    private java.awt.Label label24;
    private java.awt.Label label25;
    private java.awt.Label label26;
    private java.awt.Label label27;
    private java.awt.Label label28;
    private java.awt.Label label29;
    private java.awt.Label label3;
    private java.awt.Label label30;
    private java.awt.Label label31;
    private java.awt.Label label32;
    private java.awt.Label label33;
    private java.awt.Label label34;
    private java.awt.Label label35;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private javax.swing.JSpinner sp_Year;
    private java.awt.TextArea textArea1;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
